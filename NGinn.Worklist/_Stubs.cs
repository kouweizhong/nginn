//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:2.0.50727.1433
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: Sooda.SoodaObjectsAssembly(typeof(NGinn.Worklist.BusinessObjects._DatabaseSchema))]

namespace NGinn.Worklist.BusinessObjects {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using NGinnWorklistBusinessObjectsStubs = NGinn.Worklist.BusinessObjects.Stubs;
  
  public class UserList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<NGinn.Worklist.BusinessObjects.User> {
    public UserList() {
    }
    public UserList(ISoodaObjectList list) : 
        base(list) {
    }
    public new User this[int pos] {
      get {
        return ((User)(base.GetItem(pos)));
      }
    }
    public int Add(User obj) {
      return base.Add2(obj);
    }
    public void Remove(User obj) {
      base.Remove2(obj);
    }
    public bool Contains(User obj) {
      return base.Contains2(obj);
    }
    public UserList Sort(IComparer comparer) {
      return new UserList(base.Sort2(comparer));
    }
    public UserList Sort(string sortOrder) {
      return new UserList(base.Sort2(sortOrder));
    }
    public UserList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new UserList(base.Sort2(sortExpression));
    }
    public UserList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new UserList(base.Sort2(sortExpression, sortOrder));
    }
    public UserList SelectFirst(int count) {
      return new UserList(base.SelectFirst2(count));
    }
    public UserList SelectLast(int count) {
      return new UserList(base.SelectLast2(count));
    }
    public UserList SelectRange(int _from, int _to) {
      return new UserList(base.SelectRange2(_from, _to));
    }
    public UserList Filter(SoodaObjectFilter f) {
      return new UserList(base.Filter2(f));
    }
    public UserList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new UserList(base.Filter2(sortExpression));
    }
    public UserList Filter(SoodaWhereClause whereClause) {
      return new UserList(base.Filter2(whereClause));
    }
    public UserList GetSnapshot() {
      return new UserList(base.GetSnapshot2());
    }
  }
  public class GroupList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<NGinn.Worklist.BusinessObjects.Group> {
    public GroupList() {
    }
    public GroupList(ISoodaObjectList list) : 
        base(list) {
    }
    public new Group this[int pos] {
      get {
        return ((Group)(base.GetItem(pos)));
      }
    }
    public int Add(Group obj) {
      return base.Add2(obj);
    }
    public void Remove(Group obj) {
      base.Remove2(obj);
    }
    public bool Contains(Group obj) {
      return base.Contains2(obj);
    }
    public GroupList Sort(IComparer comparer) {
      return new GroupList(base.Sort2(comparer));
    }
    public GroupList Sort(string sortOrder) {
      return new GroupList(base.Sort2(sortOrder));
    }
    public GroupList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new GroupList(base.Sort2(sortExpression));
    }
    public GroupList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new GroupList(base.Sort2(sortExpression, sortOrder));
    }
    public GroupList SelectFirst(int count) {
      return new GroupList(base.SelectFirst2(count));
    }
    public GroupList SelectLast(int count) {
      return new GroupList(base.SelectLast2(count));
    }
    public GroupList SelectRange(int _from, int _to) {
      return new GroupList(base.SelectRange2(_from, _to));
    }
    public GroupList Filter(SoodaObjectFilter f) {
      return new GroupList(base.Filter2(f));
    }
    public GroupList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new GroupList(base.Filter2(sortExpression));
    }
    public GroupList Filter(SoodaWhereClause whereClause) {
      return new GroupList(base.Filter2(whereClause));
    }
    public GroupList GetSnapshot() {
      return new GroupList(base.GetSnapshot2());
    }
  }
  public class GroupHierarchyList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<NGinn.Worklist.BusinessObjects.GroupHierarchy> {
    public GroupHierarchyList() {
    }
    public GroupHierarchyList(ISoodaObjectList list) : 
        base(list) {
    }
    public new GroupHierarchy this[int pos] {
      get {
        return ((GroupHierarchy)(base.GetItem(pos)));
      }
    }
    public int Add(GroupHierarchy obj) {
      return base.Add2(obj);
    }
    public void Remove(GroupHierarchy obj) {
      base.Remove2(obj);
    }
    public bool Contains(GroupHierarchy obj) {
      return base.Contains2(obj);
    }
    public GroupHierarchyList Sort(IComparer comparer) {
      return new GroupHierarchyList(base.Sort2(comparer));
    }
    public GroupHierarchyList Sort(string sortOrder) {
      return new GroupHierarchyList(base.Sort2(sortOrder));
    }
    public GroupHierarchyList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new GroupHierarchyList(base.Sort2(sortExpression));
    }
    public GroupHierarchyList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new GroupHierarchyList(base.Sort2(sortExpression, sortOrder));
    }
    public GroupHierarchyList SelectFirst(int count) {
      return new GroupHierarchyList(base.SelectFirst2(count));
    }
    public GroupHierarchyList SelectLast(int count) {
      return new GroupHierarchyList(base.SelectLast2(count));
    }
    public GroupHierarchyList SelectRange(int _from, int _to) {
      return new GroupHierarchyList(base.SelectRange2(_from, _to));
    }
    public GroupHierarchyList Filter(SoodaObjectFilter f) {
      return new GroupHierarchyList(base.Filter2(f));
    }
    public GroupHierarchyList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new GroupHierarchyList(base.Filter2(sortExpression));
    }
    public GroupHierarchyList Filter(SoodaWhereClause whereClause) {
      return new GroupHierarchyList(base.Filter2(whereClause));
    }
    public GroupHierarchyList GetSnapshot() {
      return new GroupHierarchyList(base.GetSnapshot2());
    }
  }
  public class TaskList : Sooda.ObjectMapper.SoodaObjectCollectionWrapperGeneric<NGinn.Worklist.BusinessObjects.Task> {
    public TaskList() {
    }
    public TaskList(ISoodaObjectList list) : 
        base(list) {
    }
    public new Task this[int pos] {
      get {
        return ((Task)(base.GetItem(pos)));
      }
    }
    public int Add(Task obj) {
      return base.Add2(obj);
    }
    public void Remove(Task obj) {
      base.Remove2(obj);
    }
    public bool Contains(Task obj) {
      return base.Contains2(obj);
    }
    public TaskList Sort(IComparer comparer) {
      return new TaskList(base.Sort2(comparer));
    }
    public TaskList Sort(string sortOrder) {
      return new TaskList(base.Sort2(sortOrder));
    }
    public TaskList Sort(Sooda.QL.SoqlExpression sortExpression) {
      return new TaskList(base.Sort2(sortExpression));
    }
    public TaskList Sort(Sooda.QL.SoqlExpression sortExpression, Sooda.SortOrder sortOrder) {
      return new TaskList(base.Sort2(sortExpression, sortOrder));
    }
    public TaskList SelectFirst(int count) {
      return new TaskList(base.SelectFirst2(count));
    }
    public TaskList SelectLast(int count) {
      return new TaskList(base.SelectLast2(count));
    }
    public TaskList SelectRange(int _from, int _to) {
      return new TaskList(base.SelectRange2(_from, _to));
    }
    public TaskList Filter(SoodaObjectFilter f) {
      return new TaskList(base.Filter2(f));
    }
    public TaskList Filter(Sooda.QL.SoqlBooleanExpression sortExpression) {
      return new TaskList(base.Filter2(sortExpression));
    }
    public TaskList Filter(SoodaWhereClause whereClause) {
      return new TaskList(base.Filter2(whereClause));
    }
    public TaskList GetSnapshot() {
      return new TaskList(base.GetSnapshot2());
    }
  }
}
namespace NGinn.Worklist.BusinessObjects.Stubs {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using Sooda.ObjectMapper;
  using NGinnWorklistBusinessObjects = NGinn.Worklist.BusinessObjects;
  
  public class User_Values : Sooda.SoodaObjectReflectionBasedFieldValues {
    public int Id;
    public string UserId;
    public bool Active;
    public string Name;
    public System.Data.SqlTypes.SqlString Email;
    public User_Values(Sooda.SoodaObjectReflectionBasedFieldValues other) : 
        base(other) {
    }
    public User_Values(string[] fieldNames) : 
        base(fieldNames) {
    }
    public override Sooda.SoodaObjectFieldValues Clone() {
      return new User_Values(this);
    }
  }
  public class User_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("User", NGinnWorklistBusinessObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("nginn.worklist"));
    public User_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public User_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(30)]
    public string UserId {
      get {
        return this.GetUserFieldValuesForRead(0).UserId;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "UserId", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_UserId), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_UserId));
      }
    }
    public bool Active {
      get {
        return this.GetUserFieldValuesForRead(0).Active;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Active", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Active), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Active));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(100)]
    public string Name {
      get {
        return this.GetUserFieldValuesForRead(0).Name;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Name", 3, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Name), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Name));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public System.Data.SqlTypes.SqlString Email {
      get {
        return this.GetUserFieldValuesForRead(0).Email;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Email", 4, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Email), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Email));
      }
    }
    private User_Values GetUserFieldValuesForRead(int requiredTable) {
      return ((User_Values)(Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable)));
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new User_Values(fieldNames);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return User_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return User_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    public static User LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((User)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static User LoadSingleObject(Sooda.SoodaWhereClause @where) {
      return ((User)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static User LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((User)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static User LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause @where) {
      return ((User)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(tran, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static UserList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaWhereClause @where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static UserList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, options);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(tran, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, -1, options);
    }
    public static UserList GetList(SoodaWhereClause @where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static UserList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, options);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, topCount, options);
    }
    private static UserList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int topCount, SoodaSnapshotOptions options) {
      return new UserList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, topCount, options, User_Factory.TheClassInfo));
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static UserList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static User Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static User Load(SoodaTransaction tran, int id) {
      User retVal = User_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static User GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static User TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static User GetRef(SoodaTransaction tran, int id) {
      return ((User)(Sooda.SoodaObject.GetRefHelper(tran, User_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static User TryGet(SoodaTransaction tran, int id) {
      return ((User)(tran.FindObjectWithKey("User", id, typeof(User))));
    }
    public static User GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((User)(Sooda.SoodaObject.GetRefHelper(tran, User_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static User TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((User)(tran.FindObjectWithKey("User", tuple, typeof(User))));
    }
    protected virtual void BeforeFieldUpdate_UserId(object oldValue, object newValue) {
      this.BeforeFieldUpdate("UserId", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_UserId(object oldValue, object newValue) {
      this.AfterFieldUpdate("UserId", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Active(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Active", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Active(object oldValue, object newValue) {
      this.AfterFieldUpdate("Active", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Name(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Name", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Name(object oldValue, object newValue) {
      this.AfterFieldUpdate("Name", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Email(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Email", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Email(object oldValue, object newValue) {
      this.AfterFieldUpdate("Email", oldValue, newValue);
    }
  }
  public class Group_Values : Sooda.SoodaObjectReflectionBasedFieldValues {
    public int Id;
    public string Name;
    public System.Data.SqlTypes.SqlInt32 Hierarchy;
    public System.Data.SqlTypes.SqlInt32 Parent;
    public System.Data.SqlTypes.SqlInt32 Supervisor;
    public System.Data.SqlTypes.SqlString Email;
    public Group_Values(Sooda.SoodaObjectReflectionBasedFieldValues other) : 
        base(other) {
    }
    public Group_Values(string[] fieldNames) : 
        base(fieldNames) {
    }
    public override Sooda.SoodaObjectFieldValues Clone() {
      return new Group_Values(this);
    }
  }
  public class Group_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Group", NGinnWorklistBusinessObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("nginn.worklist"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[3];
    public Group_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public Group_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public string Name {
      get {
        return this.GetGroupFieldValuesForRead(0).Name;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Name", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Name), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Name));
      }
    }
    public GroupHierarchy Hierarchy {
      get {
        if ((this._refcache[0] == null)) {
          if ((this.GetGroupFieldValuesForRead(0).Hierarchy.IsNull == false)) {
            this._refcache[0] = GroupHierarchy_Stub.GetRef(this.GetTransaction(), this.GetGroupFieldValuesForRead(0).Hierarchy.Value);
          }
        }
        return ((GroupHierarchy)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Hierarchy", 2, value, this._refcache, 0, GroupHierarchy_Factory.TheFactory);
      }
    }
    public Group Parent {
      get {
        if ((this._refcache[1] == null)) {
          if ((this.GetGroupFieldValuesForRead(0).Parent.IsNull == false)) {
            this._refcache[1] = Group_Stub.GetRef(this.GetTransaction(), this.GetGroupFieldValuesForRead(0).Parent.Value);
          }
        }
        return ((Group)(this._refcache[1]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Parent", 3, value, this._refcache, 1, Group_Factory.TheFactory);
      }
    }
    public User Supervisor {
      get {
        if ((this._refcache[2] == null)) {
          if ((this.GetGroupFieldValuesForRead(0).Supervisor.IsNull == false)) {
            this._refcache[2] = User_Stub.GetRef(this.GetTransaction(), this.GetGroupFieldValuesForRead(0).Supervisor.Value);
          }
        }
        return ((User)(this._refcache[2]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Supervisor", 4, value, this._refcache, 2, User_Factory.TheFactory);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public System.Data.SqlTypes.SqlString Email {
      get {
        return this.GetGroupFieldValuesForRead(0).Email;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Email", 5, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Email), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Email));
      }
    }
    private Group_Values GetGroupFieldValuesForRead(int requiredTable) {
      return ((Group_Values)(Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable)));
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new Group_Values(fieldNames);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return Group_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return Group_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    public static Group LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((Group)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Group LoadSingleObject(Sooda.SoodaWhereClause @where) {
      return ((Group)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Group LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((Group)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Group LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause @where) {
      return ((Group)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(tran, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static GroupList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaWhereClause @where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, options);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(tran, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, -1, options);
    }
    public static GroupList GetList(SoodaWhereClause @where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, options);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, topCount, options);
    }
    private static GroupList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int topCount, SoodaSnapshotOptions options) {
      return new GroupList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, topCount, options, Group_Factory.TheClassInfo));
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static Group Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static Group Load(SoodaTransaction tran, int id) {
      Group retVal = Group_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static Group GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Group TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static Group GetRef(SoodaTransaction tran, int id) {
      return ((Group)(Sooda.SoodaObject.GetRefHelper(tran, Group_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Group TryGet(SoodaTransaction tran, int id) {
      return ((Group)(tran.FindObjectWithKey("Group", id, typeof(Group))));
    }
    public static Group GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((Group)(Sooda.SoodaObject.GetRefHelper(tran, Group_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Group TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((Group)(tran.FindObjectWithKey("Group", tuple, typeof(Group))));
    }
    protected virtual void BeforeFieldUpdate_Name(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Name", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Name(object oldValue, object newValue) {
      this.AfterFieldUpdate("Name", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Hierarchy(GroupHierarchy oldValue, GroupHierarchy newValue) {
      this.BeforeFieldUpdate("Hierarchy", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Hierarchy(GroupHierarchy oldValue, GroupHierarchy newValue) {
      this.AfterFieldUpdate("Hierarchy", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Parent(Group oldValue, Group newValue) {
      this.BeforeFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Parent(Group oldValue, Group newValue) {
      this.AfterFieldUpdate("Parent", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Supervisor(User oldValue, User newValue) {
      this.BeforeFieldUpdate("Supervisor", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Supervisor(User oldValue, User newValue) {
      this.AfterFieldUpdate("Supervisor", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Email(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Email", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Email(object oldValue, object newValue) {
      this.AfterFieldUpdate("Email", oldValue, newValue);
    }
  }
  public class GroupHierarchy_Values : Sooda.SoodaObjectReflectionBasedFieldValues {
    public int Id;
    public string Name;
    public GroupHierarchy_Values(Sooda.SoodaObjectReflectionBasedFieldValues other) : 
        base(other) {
    }
    public GroupHierarchy_Values(string[] fieldNames) : 
        base(fieldNames) {
    }
    public override Sooda.SoodaObjectFieldValues Clone() {
      return new GroupHierarchy_Values(this);
    }
  }
  public class GroupHierarchy_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("GroupHierarchy", NGinnWorklistBusinessObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("nginn.worklist"));
    public GroupHierarchy_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public GroupHierarchy_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public string Name {
      get {
        return this.GetGroupHierarchyFieldValuesForRead(0).Name;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Name", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Name), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Name));
      }
    }
    private GroupHierarchy_Values GetGroupHierarchyFieldValuesForRead(int requiredTable) {
      return ((GroupHierarchy_Values)(Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable)));
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new GroupHierarchy_Values(fieldNames);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return GroupHierarchy_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return GroupHierarchy_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    public static GroupHierarchy LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((GroupHierarchy)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static GroupHierarchy LoadSingleObject(Sooda.SoodaWhereClause @where) {
      return ((GroupHierarchy)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static GroupHierarchy LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((GroupHierarchy)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static GroupHierarchy LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause @where) {
      return ((GroupHierarchy)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(tran, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static GroupHierarchyList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(tran, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, topCount, options);
    }
    private static GroupHierarchyList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int topCount, SoodaSnapshotOptions options) {
      return new GroupHierarchyList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, topCount, options, GroupHierarchy_Factory.TheClassInfo));
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static GroupHierarchyList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static GroupHierarchy Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static GroupHierarchy Load(SoodaTransaction tran, int id) {
      GroupHierarchy retVal = GroupHierarchy_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static GroupHierarchy GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static GroupHierarchy TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static GroupHierarchy GetRef(SoodaTransaction tran, int id) {
      return ((GroupHierarchy)(Sooda.SoodaObject.GetRefHelper(tran, GroupHierarchy_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static GroupHierarchy TryGet(SoodaTransaction tran, int id) {
      return ((GroupHierarchy)(tran.FindObjectWithKey("GroupHierarchy", id, typeof(GroupHierarchy))));
    }
    public static GroupHierarchy GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((GroupHierarchy)(Sooda.SoodaObject.GetRefHelper(tran, GroupHierarchy_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static GroupHierarchy TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((GroupHierarchy)(tran.FindObjectWithKey("GroupHierarchy", tuple, typeof(GroupHierarchy))));
    }
    protected virtual void BeforeFieldUpdate_Name(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Name", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Name(object oldValue, object newValue) {
      this.AfterFieldUpdate("Name", oldValue, newValue);
    }
  }
  public class Task_Values : Sooda.SoodaObjectReflectionBasedFieldValues {
    public int Id;
    public string Title;
    public System.Data.SqlTypes.SqlString Description;
    public System.Data.SqlTypes.SqlInt32 AssigneeGroup;
    public System.Data.SqlTypes.SqlInt32 Assignee;
    public System.Data.SqlTypes.SqlString ResultCode;
    public System.Data.SqlTypes.SqlString SolutionComment;
    public System.Data.SqlTypes.SqlString ProcessInstance;
    public System.Data.SqlTypes.SqlString CorrelationId;
    public System.Data.SqlTypes.SqlString TaskId;
    public System.DateTime CreatedDate;
    public System.Data.SqlTypes.SqlDateTime ExecutionStart;
    public System.Data.SqlTypes.SqlDateTime ExecutionEnd;
    public Task_Values(Sooda.SoodaObjectReflectionBasedFieldValues other) : 
        base(other) {
    }
    public Task_Values(string[] fieldNames) : 
        base(fieldNames) {
    }
    public override Sooda.SoodaObjectFieldValues Clone() {
      return new Task_Values(this);
    }
  }
  public class Task_Stub : SoodaObject {
    private static IPrimaryKeyGenerator keyGenerator = new Sooda.ObjectMapper.KeyGenerators.TableBasedGenerator("Task", NGinnWorklistBusinessObjects._DatabaseSchema.GetSchema().GetDataSourceInfo("nginn.worklist"));
    private SoodaObject[] _refcache = new Sooda.SoodaObject[2];
    public Task_Stub(SoodaTransaction tran) : 
        base(tran) {
      this.InitNewObject();
    }
    public Task_Stub(SoodaConstructor c) : 
        base(c) {
    }
    public int Id {
      get {
        return ((int)(this.GetPrimaryKeyValue()));
      }
      set {
        this.SetPrimaryKeyValue(value);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(100)]
    public string Title {
      get {
        return this.GetTaskFieldValuesForRead(0).Title;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Title", 1, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Title), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Title));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(1000)]
    public System.Data.SqlTypes.SqlString Description {
      get {
        return this.GetTaskFieldValuesForRead(0).Description;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "Description", 2, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_Description), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_Description));
      }
    }
    public Group AssigneeGroup {
      get {
        if ((this._refcache[0] == null)) {
          if ((this.GetTaskFieldValuesForRead(0).AssigneeGroup.IsNull == false)) {
            this._refcache[0] = Group_Stub.GetRef(this.GetTransaction(), this.GetTaskFieldValuesForRead(0).AssigneeGroup.Value);
          }
        }
        return ((Group)(this._refcache[0]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "AssigneeGroup", 3, value, this._refcache, 0, Group_Factory.TheFactory);
      }
    }
    public User Assignee {
      get {
        if ((this._refcache[1] == null)) {
          if ((this.GetTaskFieldValuesForRead(0).Assignee.IsNull == false)) {
            this._refcache[1] = User_Stub.GetRef(this.GetTransaction(), this.GetTaskFieldValuesForRead(0).Assignee.Value);
          }
        }
        return ((User)(this._refcache[1]));
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetRefFieldValue(this, 0, "Assignee", 4, value, this._refcache, 1, User_Factory.TheFactory);
      }
    }
    [Sooda.SoodaFieldSizeAttribute(100)]
    public System.Data.SqlTypes.SqlString ResultCode {
      get {
        return this.GetTaskFieldValuesForRead(0).ResultCode;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "ResultCode", 5, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_ResultCode), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_ResultCode));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(1000)]
    public System.Data.SqlTypes.SqlString SolutionComment {
      get {
        return this.GetTaskFieldValuesForRead(0).SolutionComment;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "SolutionComment", 6, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_SolutionComment), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_SolutionComment));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public System.Data.SqlTypes.SqlString ProcessInstance {
      get {
        return this.GetTaskFieldValuesForRead(0).ProcessInstance;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "ProcessInstance", 7, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_ProcessInstance), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_ProcessInstance));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public System.Data.SqlTypes.SqlString CorrelationId {
      get {
        return this.GetTaskFieldValuesForRead(0).CorrelationId;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "CorrelationId", 8, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_CorrelationId), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_CorrelationId));
      }
    }
    [Sooda.SoodaFieldSizeAttribute(50)]
    public System.Data.SqlTypes.SqlString TaskId {
      get {
        return this.GetTaskFieldValuesForRead(0).TaskId;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "TaskId", 9, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_TaskId), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_TaskId));
      }
    }
    public System.DateTime CreatedDate {
      get {
        return this.GetTaskFieldValuesForRead(0).CreatedDate;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "CreatedDate", 10, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_CreatedDate), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_CreatedDate));
      }
    }
    public System.Data.SqlTypes.SqlDateTime ExecutionStart {
      get {
        return this.GetTaskFieldValuesForRead(0).ExecutionStart;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "ExecutionStart", 11, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_ExecutionStart), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_ExecutionStart));
      }
    }
    public System.Data.SqlTypes.SqlDateTime ExecutionEnd {
      get {
        return this.GetTaskFieldValuesForRead(0).ExecutionEnd;
      }
      set {
        Sooda.ObjectMapper.SoodaObjectImpl.SetPlainFieldValue(this, 0, "ExecutionEnd", 12, Sooda.SoodaNullable.Box(value), new Sooda.SoodaFieldUpdateDelegate(this.BeforeFieldUpdate_ExecutionEnd), new Sooda.SoodaFieldUpdateDelegate(this.AfterFieldUpdate_ExecutionEnd));
      }
    }
    private Task_Values GetTaskFieldValuesForRead(int requiredTable) {
      return ((Task_Values)(Sooda.ObjectMapper.SoodaObjectImpl.GetFieldValuesForRead(this, requiredTable)));
    }
    protected override SoodaObjectFieldValues InitFieldValues(int fieldCount, string[] fieldNames) {
      return new Task_Values(fieldNames);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public override Sooda.Schema.ClassInfo GetClassInfo() {
      return Task_Factory.TheClassInfo;
    }
    protected override Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return Task_Factory.InternalGetFieldHandler(ordinal);
    }
    public static IPrimaryKeyGenerator GetKeyGenerator() {
      return keyGenerator;
    }
    protected override void InitNewObject() {
      this.SetPrimaryKeyValue(GetKeyGenerator().GetNextKeyValue());
    }
    public static Task LoadSingleObject(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((Task)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(SoodaTransaction.ActiveTransaction, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Task LoadSingleObject(Sooda.SoodaWhereClause @where) {
      return ((Task)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Task LoadSingleObject(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return ((Task)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectBE(filterExpression, DoGetList(tran, new Sooda.SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static Task LoadSingleObject(SoodaTransaction tran, Sooda.SoodaWhereClause @where) {
      return ((Task)(Sooda.ObjectMapper.SoodaObjectImpl.SelectSingleObjectWC(@where, DoGetList(tran, @where, SoodaOrderBy.Unsorted, 2, SoodaSnapshotOptions.Default))));
    }
    public static TaskList GetAllObjects() {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause("1=1"), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetAllObjects(SoodaTransaction transaction) {
      return DoGetList(transaction, null, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaWhereClause @where) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static TaskList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, -1, options);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, -1, options);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy) {
      return DoGetList(tran, @where, orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, -1, options);
    }
    public static TaskList GetList(SoodaWhereClause @where, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static TaskList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, @where, orderBy, topCount, options);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, SoodaOrderBy.Unsorted, topCount, options);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, @where, orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, SoodaWhereClause @where, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, @where, orderBy, topCount, options);
    }
    private static TaskList DoGetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderByClause, int topCount, SoodaSnapshotOptions options) {
      return new TaskList(new Sooda.ObjectMapper.SoodaObjectListSnapshot(tran, whereClause, orderByClause, topCount, options, Task_Factory.TheClassInfo));
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, -1, options);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, -1, options);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(SoodaTransaction.ActiveTransaction, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), SoodaOrderBy.Unsorted, topCount, options);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, SoodaSnapshotOptions.Default);
    }
    public static TaskList GetList(SoodaTransaction tran, Sooda.QL.SoqlBooleanExpression filterExpression, SoodaOrderBy orderBy, int topCount, SoodaSnapshotOptions options) {
      return DoGetList(tran, new SoodaWhereClause(filterExpression), orderBy, topCount, options);
    }
    public static Task Load(int id) {
      return Load(SoodaTransaction.ActiveTransaction, id);
    }
    public static Task Load(SoodaTransaction tran, int id) {
      Task retVal = Task_Stub.GetRef(tran, id);
      Sooda.ObjectMapper.SoodaObjectImpl.LoadAllData(retVal);
      return retVal;
    }
    public static Task GetRef(int id) {
      return GetRef(SoodaTransaction.ActiveTransaction, id);
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Task TryGet(int id) {
      return TryGet(SoodaTransaction.ActiveTransaction, id);
    }
    public static Task GetRef(SoodaTransaction tran, int id) {
      return ((Task)(Sooda.SoodaObject.GetRefHelper(tran, Task_Factory.TheFactory, id)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Task TryGet(SoodaTransaction tran, int id) {
      return ((Task)(tran.FindObjectWithKey("Task", id, typeof(Task))));
    }
    public static Task GetRef(SoodaTransaction tran, SoodaTuple tuple) {
      return ((Task)(Sooda.SoodaObject.GetRefHelper(tran, Task_Factory.TheFactory, tuple)));
    }
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    public static Task TryGet(SoodaTransaction tran, SoodaTuple tuple) {
      return ((Task)(tran.FindObjectWithKey("Task", tuple, typeof(Task))));
    }
    protected virtual void BeforeFieldUpdate_Title(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Title", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Title(object oldValue, object newValue) {
      this.AfterFieldUpdate("Title", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Description(object oldValue, object newValue) {
      this.BeforeFieldUpdate("Description", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Description(object oldValue, object newValue) {
      this.AfterFieldUpdate("Description", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_AssigneeGroup(Group oldValue, Group newValue) {
      this.BeforeFieldUpdate("AssigneeGroup", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_AssigneeGroup(Group oldValue, Group newValue) {
      this.AfterFieldUpdate("AssigneeGroup", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_Assignee(User oldValue, User newValue) {
      this.BeforeFieldUpdate("Assignee", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_Assignee(User oldValue, User newValue) {
      this.AfterFieldUpdate("Assignee", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_ResultCode(object oldValue, object newValue) {
      this.BeforeFieldUpdate("ResultCode", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_ResultCode(object oldValue, object newValue) {
      this.AfterFieldUpdate("ResultCode", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_SolutionComment(object oldValue, object newValue) {
      this.BeforeFieldUpdate("SolutionComment", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_SolutionComment(object oldValue, object newValue) {
      this.AfterFieldUpdate("SolutionComment", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_ProcessInstance(object oldValue, object newValue) {
      this.BeforeFieldUpdate("ProcessInstance", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_ProcessInstance(object oldValue, object newValue) {
      this.AfterFieldUpdate("ProcessInstance", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_CorrelationId(object oldValue, object newValue) {
      this.BeforeFieldUpdate("CorrelationId", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_CorrelationId(object oldValue, object newValue) {
      this.AfterFieldUpdate("CorrelationId", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_TaskId(object oldValue, object newValue) {
      this.BeforeFieldUpdate("TaskId", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_TaskId(object oldValue, object newValue) {
      this.AfterFieldUpdate("TaskId", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_CreatedDate(object oldValue, object newValue) {
      this.BeforeFieldUpdate("CreatedDate", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_CreatedDate(object oldValue, object newValue) {
      this.AfterFieldUpdate("CreatedDate", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_ExecutionStart(object oldValue, object newValue) {
      this.BeforeFieldUpdate("ExecutionStart", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_ExecutionStart(object oldValue, object newValue) {
      this.AfterFieldUpdate("ExecutionStart", oldValue, newValue);
    }
    protected virtual void BeforeFieldUpdate_ExecutionEnd(object oldValue, object newValue) {
      this.BeforeFieldUpdate("ExecutionEnd", oldValue, newValue);
    }
    protected virtual void AfterFieldUpdate_ExecutionEnd(object oldValue, object newValue) {
      this.AfterFieldUpdate("ExecutionEnd", oldValue, newValue);
    }
  }
  [SoodaObjectFactoryAttribute("User", typeof(User))]
  public class User_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler[] _fieldHandlers;
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static User_Factory _theFactory = new User_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = NGinn.Worklist.BusinessObjects._DatabaseSchema.GetSchema().FindClassByName("User");
    private static Type _theType = typeof(User);
    static User_Factory() {
      _fieldHandlers = new SoodaFieldHandler[5];
      _fieldHandlers[0] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[1] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
      _fieldHandlers[2] = new Sooda.ObjectMapper.FieldHandlers.BooleanAsIntegerFieldHandler(false);
      _fieldHandlers[3] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
      _fieldHandlers[4] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
    }
    public User_Factory() {
    }
    public static User_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return User_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return User_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return User_Stub.GetList(tran, whereClause, orderBy, options);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _fieldHandlers[ordinal];
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new User(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      User retVal = new User(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("Group", typeof(Group))]
  public class Group_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler[] _fieldHandlers;
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static Group_Factory _theFactory = new Group_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = NGinn.Worklist.BusinessObjects._DatabaseSchema.GetSchema().FindClassByName("Group");
    private static Type _theType = typeof(Group);
    static Group_Factory() {
      _fieldHandlers = new SoodaFieldHandler[6];
      _fieldHandlers[0] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[1] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
      _fieldHandlers[2] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[3] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(true);
      _fieldHandlers[4] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[5] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
    }
    public Group_Factory() {
    }
    public static Group_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return Group_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return Group_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return Group_Stub.GetList(tran, whereClause, orderBy, options);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _fieldHandlers[ordinal];
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new Group(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      Group retVal = new Group(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("GroupHierarchy", typeof(GroupHierarchy))]
  public class GroupHierarchy_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler[] _fieldHandlers;
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static GroupHierarchy_Factory _theFactory = new GroupHierarchy_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = NGinn.Worklist.BusinessObjects._DatabaseSchema.GetSchema().FindClassByName("GroupHierarchy");
    private static Type _theType = typeof(GroupHierarchy);
    static GroupHierarchy_Factory() {
      _fieldHandlers = new SoodaFieldHandler[2];
      _fieldHandlers[0] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[1] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
    }
    public GroupHierarchy_Factory() {
    }
    public static GroupHierarchy_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return GroupHierarchy_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return GroupHierarchy_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return GroupHierarchy_Stub.GetList(tran, whereClause, orderBy, options);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _fieldHandlers[ordinal];
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new GroupHierarchy(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      GroupHierarchy retVal = new GroupHierarchy(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  [SoodaObjectFactoryAttribute("Task", typeof(Task))]
  public class Task_Factory : object, ISoodaObjectFactory {
    private static SoodaFieldHandler[] _fieldHandlers;
    private static SoodaFieldHandler _primaryKeyFieldHandler = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
    private static Task_Factory _theFactory = new Task_Factory();
    private static Sooda.Schema.ClassInfo _theClassInfo = NGinn.Worklist.BusinessObjects._DatabaseSchema.GetSchema().FindClassByName("Task");
    private static Type _theType = typeof(Task);
    static Task_Factory() {
      _fieldHandlers = new SoodaFieldHandler[13];
      _fieldHandlers[0] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(false);
      _fieldHandlers[1] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(false);
      _fieldHandlers[2] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[3] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(true);
      _fieldHandlers[4] = new Sooda.ObjectMapper.FieldHandlers.Int32FieldHandler(true);
      _fieldHandlers[5] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[6] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[7] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[8] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[9] = new Sooda.ObjectMapper.FieldHandlers.StringFieldHandler(true);
      _fieldHandlers[10] = new Sooda.ObjectMapper.FieldHandlers.DateTimeFieldHandler(false);
      _fieldHandlers[11] = new Sooda.ObjectMapper.FieldHandlers.DateTimeFieldHandler(true);
      _fieldHandlers[12] = new Sooda.ObjectMapper.FieldHandlers.DateTimeFieldHandler(true);
    }
    public Task_Factory() {
    }
    public static Task_Factory TheFactory {
      get {
        return _theFactory;
      }
    }
    public virtual Type TheType {
      get {
        return _theType;
      }
    }
    public static Sooda.Schema.ClassInfo TheClassInfo {
      get {
        return _theClassInfo;
      }
    }
    public virtual SoodaObject GetRef(SoodaTransaction tran, object keyValue) {
      return Task_Stub.GetRef(tran, ((int)(keyValue)));
    }
    public virtual SoodaObject TryGet(SoodaTransaction tran, object keyValue) {
      return Task_Stub.TryGet(tran, ((int)(keyValue)));
    }
    public virtual System.Collections.IList GetList(SoodaTransaction tran, SoodaWhereClause whereClause, SoodaOrderBy orderBy, SoodaSnapshotOptions options) {
      return Task_Stub.GetList(tran, whereClause, orderBy, options);
    }
    public virtual Sooda.Schema.ClassInfo GetClassInfo() {
      return TheClassInfo;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetPrimaryKeyFieldHandler() {
      return _primaryKeyFieldHandler;
    }
    public virtual Sooda.ObjectMapper.SoodaFieldHandler GetFieldHandler(int ordinal) {
      return InternalGetFieldHandler(ordinal);
    }
    internal static Sooda.ObjectMapper.SoodaFieldHandler InternalGetFieldHandler(int ordinal) {
      return _fieldHandlers[ordinal];
    }
    public virtual SoodaObject CreateNew(SoodaTransaction tran) {
      return new Task(tran);
    }
    public virtual SoodaObject GetRawObject(SoodaTransaction tran) {
      Task retVal = new Task(SoodaConstructor.Constructor);
      retVal.InitRawObject(tran);
      return retVal;
    }
  }
  public class UserCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public UserCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(User item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(UserWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsUserWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("User", whereClause);
    }
  }
  public class UserWrapperExpression : Sooda.QL.SoqlPathExpression {
    public UserWrapperExpression() {
    }
    public UserWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression UserId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "UserId"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Active {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Active"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Email {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Email"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params UserWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params User[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(UserWrapperExpression left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(UserWrapperExpression left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(UserWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(UserWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(User left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(User left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(UserWrapperExpression left, User right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(UserWrapperExpression left, User right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(UserWrapperExpression left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(UserWrapperExpression left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(UserWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(UserWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(User left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(User left, UserWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(UserWrapperExpression left, User right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(UserWrapperExpression left, User right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class UserNullableWrapperExpression : UserWrapperExpression {
    public UserNullableWrapperExpression() {
    }
    public UserNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class GroupCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public GroupCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(Group item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(GroupWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsGroupWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("Group", whereClause);
    }
  }
  public class GroupWrapperExpression : Sooda.QL.SoqlPathExpression {
    public GroupWrapperExpression() {
    }
    public GroupWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual GroupHierarchyWrapperExpression Hierarchy {
      get {
        return new GroupHierarchyWrapperExpression(this, "Hierarchy");
      }
    }
    public virtual GroupNullableWrapperExpression Parent {
      get {
        return new GroupNullableWrapperExpression(this, "Parent");
      }
    }
    public virtual UserWrapperExpression Supervisor {
      get {
        return new UserWrapperExpression(this, "Supervisor");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Email {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Email"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params GroupWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params Group[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupWrapperExpression left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupWrapperExpression left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(Group left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(Group left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupWrapperExpression left, Group right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupWrapperExpression left, Group right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupWrapperExpression left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupWrapperExpression left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(Group left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(Group left, GroupWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupWrapperExpression left, Group right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupWrapperExpression left, Group right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class GroupNullableWrapperExpression : GroupWrapperExpression {
    public GroupNullableWrapperExpression() {
    }
    public GroupNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class GroupHierarchyCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public GroupHierarchyCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(GroupHierarchy item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(GroupHierarchyWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsGroupHierarchyWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("GroupHierarchy", whereClause);
    }
  }
  public class GroupHierarchyWrapperExpression : Sooda.QL.SoqlPathExpression {
    public GroupHierarchyWrapperExpression() {
    }
    public GroupHierarchyWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Name"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params GroupHierarchyWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params GroupHierarchy[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupHierarchyWrapperExpression left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupHierarchyWrapperExpression left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupHierarchyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupHierarchyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupHierarchy left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupHierarchy left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(GroupHierarchyWrapperExpression left, GroupHierarchy right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(GroupHierarchyWrapperExpression left, GroupHierarchy right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupHierarchyWrapperExpression left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupHierarchyWrapperExpression left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupHierarchyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupHierarchyWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupHierarchy left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupHierarchy left, GroupHierarchyWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(GroupHierarchyWrapperExpression left, GroupHierarchy right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(GroupHierarchyWrapperExpression left, GroupHierarchy right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class GroupHierarchyNullableWrapperExpression : GroupHierarchyWrapperExpression {
    public GroupHierarchyNullableWrapperExpression() {
    }
    public GroupHierarchyNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
  public class TaskCollectionExpression : Sooda.QL.TypedWrappers.SoqlCollectionWrapperExpression {
    public TaskCollectionExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(Task item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(TaskWrapperExpression item) {
      return this.ContainsImpl(item);
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Contains(int item) {
      return this.ContainsImpl(new Sooda.QL.SoqlLiteralExpression(item));
    }
    public virtual Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression ContainsTaskWhere(Sooda.QL.SoqlBooleanExpression whereClause) {
      return this.ContainsExprImpl("Task", whereClause);
    }
  }
  public class TaskWrapperExpression : Sooda.QL.SoqlPathExpression {
    public TaskWrapperExpression() {
    }
    public TaskWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(this));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Id"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Title {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Title"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Description {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "Description"));
      }
    }
    public virtual GroupNullableWrapperExpression AssigneeGroup {
      get {
        return new GroupNullableWrapperExpression(this, "AssigneeGroup");
      }
    }
    public virtual UserNullableWrapperExpression Assignee {
      get {
        return new UserNullableWrapperExpression(this, "Assignee");
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression ResultCode {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "ResultCode"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression SolutionComment {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "SolutionComment"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression ProcessInstance {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "ProcessInstance"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression CorrelationId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "CorrelationId"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression TaskId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "TaskId"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression CreatedDate {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "CreatedDate"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression ExecutionStart {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "ExecutionStart"));
      }
    }
    public virtual Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression ExecutionEnd {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression(this, "ExecutionEnd"));
      }
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params TaskWrapperExpression[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params Task[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public virtual Sooda.QL.SoqlBooleanExpression In(params int[] items) {
      return new Sooda.QL.SoqlBooleanInExpression(this, items);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(TaskWrapperExpression left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(TaskWrapperExpression left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(int left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(int left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(TaskWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(TaskWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(Task left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(Task left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator ==(TaskWrapperExpression left, Task right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression operator !=(TaskWrapperExpression left, Task right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(TaskWrapperExpression left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(TaskWrapperExpression left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(int left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(int left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(TaskWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(TaskWrapperExpression left, int right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(Task left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(Task left, TaskWrapperExpression right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(left.GetPrimaryKeyValue()), right, Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression Equals(TaskWrapperExpression left, Task right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.Equal);
    }
    public static Sooda.QL.SoqlBooleanRelationalExpression NotEqualTo(TaskWrapperExpression left, Task right) {
      return new Sooda.QL.SoqlBooleanRelationalExpression(left, new Sooda.QL.SoqlLiteralExpression(right.GetPrimaryKeyValue()), Sooda.QL.SoqlRelationalOperator.NotEqual);
    }
    public override bool Equals(object o) {
      return object.ReferenceEquals(this, o);
    }
    public override int GetHashCode() {
      return base.GetHashCode();
    }
  }
  public class TaskNullableWrapperExpression : TaskWrapperExpression {
    public TaskNullableWrapperExpression() {
    }
    public TaskNullableWrapperExpression(Sooda.QL.SoqlPathExpression left, string name) : 
        base(left, name) {
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, false);
    }
    public virtual Sooda.QL.SoqlBooleanExpression IsNotNull() {
      return new Sooda.QL.SoqlBooleanIsNullExpression(this, true);
    }
  }
}
namespace NGinn.Worklist.BusinessObjects.TypedQueries {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using NGinn.Worklist.BusinessObjects.Stubs;
  
  public class UserField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression UserId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("UserId"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression Active {
      get {
        return new Sooda.QL.TypedWrappers.SoqlBooleanWrapperExpression(new Sooda.QL.SoqlPathExpression("Active"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Email {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Email"));
      }
    }
  }
  public class GroupField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
    public static GroupHierarchyWrapperExpression Hierarchy {
      get {
        return new GroupHierarchyWrapperExpression(null, "Hierarchy");
      }
    }
    public static GroupNullableWrapperExpression Parent {
      get {
        return new GroupNullableWrapperExpression(null, "Parent");
      }
    }
    public static UserWrapperExpression Supervisor {
      get {
        return new UserWrapperExpression(null, "Supervisor");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Email {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Email"));
      }
    }
  }
  public class GroupHierarchyField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Name {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Name"));
      }
    }
  }
  public class TaskField : object {
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression SoodaClass {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlSoodaClassExpression(null));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression Id {
      get {
        return new Sooda.QL.TypedWrappers.SoqlInt32WrapperExpression(new Sooda.QL.SoqlPathExpression("Id"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlStringWrapperExpression Title {
      get {
        return new Sooda.QL.TypedWrappers.SoqlStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Title"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression Description {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("Description"));
      }
    }
    public static GroupNullableWrapperExpression AssigneeGroup {
      get {
        return new GroupNullableWrapperExpression(null, "AssigneeGroup");
      }
    }
    public static UserNullableWrapperExpression Assignee {
      get {
        return new UserNullableWrapperExpression(null, "Assignee");
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression ResultCode {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("ResultCode"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression SolutionComment {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("SolutionComment"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression ProcessInstance {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("ProcessInstance"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression CorrelationId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("CorrelationId"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression TaskId {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableStringWrapperExpression(new Sooda.QL.SoqlPathExpression("TaskId"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression CreatedDate {
      get {
        return new Sooda.QL.TypedWrappers.SoqlDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("CreatedDate"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression ExecutionStart {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("ExecutionStart"));
      }
    }
    public static Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression ExecutionEnd {
      get {
        return new Sooda.QL.TypedWrappers.SoqlNullableDateTimeWrapperExpression(new Sooda.QL.SoqlPathExpression("ExecutionEnd"));
      }
    }
  }
}
namespace NGinn.Worklist.BusinessObjects {
  using System;
  using System.Collections;
  using System.Diagnostics;
  using System.Data;
  using Sooda;
  using NGinnWorklistBusinessObjectsStubs = NGinn.Worklist.BusinessObjects.Stubs;
  
  public class _DatabaseSchema : object, Sooda.ObjectMapper.ISoodaSchema {
    private Sooda.ISoodaObjectFactory[] _factories;
    private static Sooda.Schema.SchemaInfo _theSchema;
    static _DatabaseSchema() {
      _theSchema = LoadSchema();
    }
    public _DatabaseSchema() {
      this._factories = new ISoodaObjectFactory[] {
          NGinn.Worklist.BusinessObjects.Stubs.User_Factory.TheFactory,
          NGinn.Worklist.BusinessObjects.Stubs.Group_Factory.TheFactory,
          NGinn.Worklist.BusinessObjects.Stubs.GroupHierarchy_Factory.TheFactory,
          NGinn.Worklist.BusinessObjects.Stubs.Task_Factory.TheFactory};
    }
    public virtual Sooda.Schema.SchemaInfo Schema {
      get {
        return GetSchema();
      }
    }
    public static Sooda.Schema.SchemaInfo GetSchema() {
      return _theSchema;
    }
    private static Sooda.Schema.SchemaInfo LoadSchema() {
      return Sooda.ObjectMapper.SchemaLoader.GetSchemaFromAssembly(typeof(NGinn.Worklist.BusinessObjects._DatabaseSchema).Assembly);
    }
    public virtual Sooda.ISoodaObjectFactory[] GetFactories() {
      return this._factories;
    }
  }
}
